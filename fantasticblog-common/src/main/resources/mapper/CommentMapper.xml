<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cc.lijad.fantasticblog.mapper.CommentMapper">

    <resultMap id="BaseResultMap" type="cc.lijad.fantasticblog.domain.entity.Comment">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="parentId" column="parent_id" jdbcType="BIGINT"/>
        <result property="articleId" column="article_id" jdbcType="BIGINT"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="BIGINT"/>
        <result property="userAvatar" column="user_avatar" jdbcType="VARCHAR"/>
        <result property="userNickname" column="user_nickname" jdbcType="VARCHAR"/>
        <result property="userEmail" column="user_email" jdbcType="VARCHAR"/>
        <result property="replyUserId" column="reply_user_id" jdbcType="BIGINT"/>
        <result property="replyUserAvatar" column="reply_user_avatar" jdbcType="VARCHAR"/>
        <result property="replyUserNickname" column="reply_user_nickname" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,parent_id,article_id,
        content,user_id,user_avatar,
        user_nickname,user_email,reply_user_id,
        reply_user_avatar,reply_user_nickname,create_time,
        status,del_flag
    </sql>

    <resultMap id="VoResultMap" type="cc.lijad.fantasticblog.domain.vo.CommentEditVo">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="parentId" column="parent_id" jdbcType="BIGINT"/>
        <result property="articleId" column="article_id" jdbcType="BIGINT"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="userId" column="user_id" jdbcType="BIGINT"/>
        <result property="userAvatar" column="user_avatar" jdbcType="VARCHAR"/>
        <result property="userNickname" column="user_nickname" jdbcType="VARCHAR"/>
        <result property="userEmail" column="user_email" jdbcType="VARCHAR"/>
        <result property="replyUserId" column="reply_user_id" jdbcType="BIGINT"/>
        <result property="replyUserAvatar" column="reply_user_avatar" jdbcType="VARCHAR"/>
        <result property="replyUserNickname" column="reply_user_nickname" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="delFlag" column="del_flag" jdbcType="INTEGER"/>
        <result property="articleTitle" column="title"/>
    </resultMap>

    <select id="selectCommentForEdit" resultMap="VoResultMap">
        select
        a.title,c.id,c.parent_id,c.article_id,
        c.content,c.user_id,c.user_avatar,
        c.user_nickname,c.user_email,c.reply_user_id,
        c.reply_user_avatar,c.reply_user_nickname,c.create_time,
        c.status,c.del_flag
        from blog_comment c
        join blog_article a
        on c.article_id = a.id
        <where>
            c.del_flag = 0
            <choose>
                <when test="articleId != null and articleId != -1">
                    and c.article_id = #{articleId}
                </when>
                <otherwise>
                    and c.article_id != 0
                </otherwise>
            </choose>
        </where>
        limit #{pageNum},#{pageSize}
    </select>
    <select id="selectCommentEditCount" resultType="java.lang.Integer">
        select
        count(*)
        from blog_comment c
        join blog_article a
        on c.article_id = a.id
        <where>
            c.del_flag = 0
            <choose>
                <when test="articleId != null and articleId != -1">
                    and c.article_id = #{articleId}
                </when>
                <otherwise>
                    and c.article_id != 0
                </otherwise>
            </choose>
        </where>
    </select>

    <resultMap id="articleCommentUpdateModel" type="cc.lijad.fantasticblog.domain.model.ArticleCommentUpdateModel">
        <result property="articleId" column="article_id"/>
        <result property="influenceCount" column="influence_count"/>
    </resultMap>
    <select id="selectCommentDeleteToArticle"
            resultMap="articleCommentUpdateModel">
        select article_id,count(0) as influence_count
        from blog_comment
        <where>
            id in
            <foreach collection="ids" item="id" open="(" close=")" separator=",">
                #{id}
            </foreach>
            and article_id != 0
        </where>
        GROUP BY article_id
    </select>
</mapper>
